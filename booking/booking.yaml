openapi: 3.1.1

info:
  title: API Réservations
  summary: API du service de gestion des réservations
  description: |
    Cette API gère les réservations de films pour les utilisateurs. Elle fournit des endpoints pour créer, 
    lire et supprimer des entrées de réservation. Le service s'intègre avec le service Movie pour valider 
    l'existence des films et avec le service Schedule pour vérifier la disponibilité des films aux dates 
    demandées. Il utilise également le service User pour restreindre l'accès aux données globales de 
    réservation aux administrateurs uniquement.
  contact:
    name: Clovis SFEIR 
    url: https://etrange.org/
    email: support@cinema.fr
  version: 1.0.0

tags:
  - name: réservations
    description: Opérations liées aux réservations de films
  - name: admins
    description: Appels sécurisés réservés aux administrateurs

paths:
  /:
    get:
      tags:
        - réservations
      summary: page d'accueil du service
      operationId: home
      description: Page de bienvenue du service Réservations
      responses:
        '200':
          description: message de bienvenue
          content:
            text/html:
              schema:
                type: string
                example: "<h1 style='color:blue'>Bienvenue dans le service Réservations!</h1>"

  /bookings:
    get:
      tags:
        - admins
      summary: obtenir toutes les réservations (admin uniquement)
      operationId: get_all_bookings
      description: |
        Récupère toutes les réservations de tous les utilisateurs. Ce endpoint nécessite des privilèges 
        administrateurs et vérifie le rôle de l'utilisateur via le service User.
      parameters:
        - name: userid
          in: query
          required: true
          description: ID utilisateur de l'utilisateur demandeur (doit être administrateur)
          schema:
            type: string
            example: chris_rivers
      responses:
        '200':
          description: liste de toutes les réservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserBookings'
        '400':
          description: paramètre userid manquant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: accès refusé - droits administrateur requis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      tags:
        - réservations
      summary: créer une nouvelle réservation
      operationId: create_booking
      description: |
        Crée une nouvelle réservation de film pour un utilisateur. Ce endpoint valide l'existence 
        du film via le service Movie et vérifie la programmation via le service Schedule.
      requestBody:
        description: Informations de réservation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '201':
          description: réservation créée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Réservation créée avec succès
                  booking:
                    $ref: '#/components/schemas/BookingRequest'
        '400':
          description: champs requis manquants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: film non trouvé ou non programmé à cette date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: film déjà réservé pour cette date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings/{userid}:
    get:
      tags:
        - réservations
      summary: obtenir les réservations d'un utilisateur
      operationId: get_user_bookings
      description: Récupère toutes les réservations d'un utilisateur spécifique
      parameters:
        - name: userid
          in: path
          required: true
          description: ID utilisateur
          schema:
            type: string
            example: chris_rivers
      responses:
        '200':
          description: réservations de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBookings'
        '404':
          description: aucune réservation trouvée pour cet utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      tags:
        - réservations
      summary: supprimer toutes les réservations d'un utilisateur
      operationId: delete_all_user_bookings
      description: Supprime toutes les réservations d'un utilisateur spécifique
      parameters:
        - name: userid
          in: path
          required: true
          description: ID utilisateur
          schema:
            type: string
            example: chris_rivers
      responses:
        '200':
          description: toutes les réservations de l'utilisateur supprimées
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Toutes les réservations de chris_rivers ont été supprimées
        '404':
          description: aucune réservation trouvée pour cet utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings/{userid}/detailed:
    get:
      tags:
        - réservations
      summary: obtenir les réservations détaillées d'un utilisateur
      operationId: get_detailed_user_bookings
      description: |
        Récupère les réservations d'un utilisateur enrichies avec les informations complètes des films 
        provenant du service Movie et les informations de programmation du service Schedule. Ceci fournit 
        une vue complète combinant les données de trois services.
      parameters:
        - name: userid
          in: path
          required: true
          description: ID utilisateur
          schema:
            type: string
            example: chris_rivers
      responses:
        '200':
          description: réservations détaillées de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedBookings'
        '404':
          description: aucune réservation trouvée pour cet utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings/{userid}/{movieid}/{date}:
    delete:
      tags:
        - réservations
      summary: supprimer une réservation spécifique
      operationId: delete_booking
      description: Supprime une réservation de film spécifique pour un utilisateur à une date donnée
      parameters:
        - name: userid
          in: path
          required: true
          description: ID utilisateur
          schema:
            type: string
            example: chris_rivers
        - name: movieid
          in: path
          required: true
          description: ID du film
          schema:
            type: string
            example: 720d006c-3a57-4b6a-b18f-9b713b073f3c
        - name: date
          in: path
          required: true
          description: Date au format AAAAMMJJ
          schema:
            type: string
            example: "20151130"
      responses:
        '200':
          description: réservation supprimée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Réservation supprimée avec succès
        '404':
          description: réservation non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    BookingRequest:
      type: object
      required:
        - userid
        - movieid
        - date
      properties:
        userid:
          type: string
          example: chris_rivers
        movieid:
          type: string
          example: 720d006c-3a57-4b6a-b18f-9b713b073f3c
        date:
          type: string
          example: "20151130"
          description: Date au format AAAAMMJJ
    
    UserBookings:
      type: object
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            $ref: '#/components/schemas/DateBooking'
    
    DateBooking:
      type: object
      properties:
        date:
          type: string
          example: "20151130"
        movies:
          type: array
          items:
            type: string
          example: ["720d006c-3a57-4b6a-b18f-9b713b073f3c"]
    
    DetailedBookings:
      type: object
      properties:
        userid:
          type: string
          example: chris_rivers
        bookings:
          type: array
          items:
            $ref: '#/components/schemas/DetailedDateBooking'
    
    DetailedDateBooking:
      type: object
      properties:
        date:
          type: string
          example: "20151130"
        movies:
          type: array
          items:
            $ref: '#/components/schemas/DetailedMovie'
    
    DetailedMovie:
      type: object
      properties:
        movie:
          $ref: '#/components/schemas/MovieInfo'
        schedule:
          $ref: '#/components/schemas/ScheduleInfo'
    
    MovieInfo:
      type: object
      properties:
        id:
          type: string
          example: 720d006c-3a57-4b6a-b18f-9b713b073f3c
        title:
          type: string
          example: Creed
        rating:
          type: number
          example: 8.8
        director:
          type: string
          example: Ryan Coogler
    
    ScheduleInfo:
      type: object
      properties:
        date:
          type: string
          example: "20151130"
        movieid:
          type: string
          example: 720d006c-3a57-4b6a-b18f-9b713b073f3c
        available:
          type: boolean
          example: true
    
    Error:
      type: object
      properties:
        error:
          type: string
          example: Aucune réservation trouvée pour cet utilisateur
